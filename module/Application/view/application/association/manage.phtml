<?php
echo $this->partial('partial/menu', $menuParams);

// The basic File Upload plugin
$this->headScript()->prependFile($this->basePath() . '/js/jquery.fileupload.js');
// The Iframe Transport is required for browsers without support for XHR file uploads
$this->headScript()->prependFile($this->basePath() . '/js/jquery.iframe-transport.js');
// The jQuery UI widget factory, can be omitted if jQuery UI is already included
$this->headScript()->prependFile($this->basePath() . '/js/vendor/jquery.ui.widget.js');

function createStaticEditForm($info, $title)
{
    echo '<div class="col-md-12">';
    echo '    <div class="rounded opacity2 staticinfo_view" data-id="'.$info->getId().'">';
    echo '        <h2>'.$title.'</h2>';
    echo '        <div class="staticinfo_view_div" data-id="'.$info->getId().'">';
    echo $info->getStaticText();
    echo '        </div>';
    echo '        <button class="btn btn-sm edit_staticinfo" data-id="'.$info->getId().'">Bearbeiten</button>';
    echo '    </div>';
    echo '    <div class="rounded opacity2 staticinfo_edit" style="display: none;" data-id="'.$info->getId().'">';
    echo '        <h2>'.$title.'</h2>';
    echo '        <textarea class="staticinfo_textarea" data-id="'.$info->getId().'">';
    echo  $info->getStaticText();
    echo '        </textarea>';
    echo '        <button class="btn btn-sm cancel_staticinfo" data-id="'.$info->getId().'" >Abbrechen</button>';
    echo '        <button class="btn btn-sm save_staticinfo" data-id="'.$info->getId().'" >Speichern</button>';
    echo '    </div>';
    echo '</div>';
}


echo '<div id="posting_errors"></div>';

// Receiving member list and parsing
?>
<div class="row" id="allMembers">
<?php foreach($carnivalYear->getMembers() as $member)
{
    echo $this->partial('application/association/partial/member.phtml', array(
        'id' => $member->getId(),
        'prename' => $member->getPrename(),
        'name' => $member->getName(),
        'imagePath' => $imagePath.$member->getImagePath(),
        'responsabilites' =>$member->getResponsabilites(),
        'editMode' => true,));
}
?>
</div>
<div class="row">
<?php echo $this->partial('application/association/partial/member_form.phtml', array('addForm' => $addForm,
                                                                        'editMode' => false,
                                                                        'id' => '-1')); ?>
</div>

<div class="row">
    <?php echo createStaticEditForm($association, 'Vereinsgeschichte'); ?>
    <?php echo createStaticEditForm($joinus, 'Mitglied werden'); ?>
</div>

<script type="text/javascript">
    function show_fill_error() {
        document.getElementById('posting_errors').innerHTML = '<div class="alert alert-danger"><a class="close" data-dismiss="alert">&times;</a>Please fill all fields</div>';
    }
    
    $(document).delegate('.appendButton', 'click',function() {
        var id = $(this).attr('data-id');
        
        var filesList = $("#memberPhoto")[0].files[0];  
        var name = $('input#name').val();
        var prename = $('input#prename').val();
        var responsabilities = $('input#responsabilities').val();
        
        if(name == '' || prename == '' || filesList == undefined) {
            show_fill_error();
        }else{
                      
            var url = '<?php echo $base_url.'add/'.$carnivalYear->getYear(); ?>';
            
            // initializes the update request handler
            $('form[name=add_form]').fileupload();
            
            // parametrize the update request handler
            $('form[name=add_form]').fileupload(
                'option', {
                    files: filesList,
                    url: url,
                    formData: {
                        name: name,
                        prename: prename,
                        responsabilities: responsabilities
                    },
                    dataType: 'html',
                    type: 'POST',
                    cache: false,
                    contentType: false,
                    processData: false
                });
                
            // Send the request and define the callback handlers
            var jqXHR = $('form[name=add_form]').fileupload('send', {files: filesList})
                .success(function (result, textStatus, jqXHR) {
                    console.log('success ' + textStatus + " " + jqXHR )
                    
                    document.getElementById('allMembers').innerHTML += result;
                    $(".event").filter(":eq(-2)").hide();
                    $(".event").filter(":eq(-2)").slideDown();
                })
                .error(function (jqXHR, textStatus, errorThrown) {
                    console.log('error ' + textStatus + "->" + errorThrown );
                })
                .complete(function (result, textStatus, jqXHR) {
                    console.log('complete ' + textStatus + " " + jqXHR );
                    $('form[name=add_form]').fileupload('destroy');
                }
            );
        }
    });
    
    $(document).delegate('.editButton', 'click', function() {
        var id = $(this).attr('data-id');
        
            $.ajax({
                url: '<?php echo $base_url;?>geteditform/'+id,
                type: 'POST',
                dataType: 'html',
                data: {},
                success: function(html) {
                   document.getElementById('member-'+id).innerHTML = html;
                }
            });
        
    });
    
    $(document).delegate('.saveButton', 'click', function() {
        var id = $(this).attr('data-id');

        var imagePath = $('input#imagePath-'+id).val();
        var name = $('input#name-'+id).val();
        var prename = $('input#prename-'+id).val();
        var responsabilities = $('input#responsabilities-'+id).val();

        if(name == '' || prename == '') {
            show_fill_error();
        }else{
            $.ajax({
                url: '<?php echo $base_url;?>edit/'+id,
                type: 'POST',
                dataType: 'html',
                data: {
                    imagePath: imagePath,
                    name: name,
                    prename: prename,
                    responsabilities: responsabilities,
                },
                success: function(html) {
                   document.getElementById('member-'+id).innerHTML = html;
                }
            });
        }
    });
    
    $(document).delegate('.deleteButton', 'click', function() {
        if(confirm("Delete this member ?"))
        {
            var id = $(this).attr('data-id');

            // Remove from page
            var div = document.getElementById('member-'+id);
            div.parentNode.removeChild(div);

            // TODO Verification
            $.ajax({
                url: '<?php echo $base_url;?>delete/'+id,
                type: 'POST',
                dataType: 'JSON',
                data: {},
                success: function(json) {
                }
            });
        }
    });
    

    
    $(document).delegate('.edit_staticinfo', 'click', function() {
        var id = $(this).attr('data-id');
        
        $('.staticinfo_view[data-id=' + id + ']').slideUp('hide', function(){
            $('.staticinfo_edit[data-id=' + id + ']').slideDown();
        });
        
        $('.staticinfo_textarea[data-id=' + id + ']').attr('name', 'currentmce'+id);
        tinymce.init({
            selector: '.staticinfo_textarea[data-id=' + id + ']',
            theme: "modern",
            add_unload_trigger: false,
            schema: "html5",
            inline: false,
            statusbar: true,
            menubar: false,
        });
    });
    
    $(document).delegate('.cancel_staticinfo', 'click', function() {
        var id = $(this).attr('data-id');
        $('.staticinfo_edit[data-id=' + id + ']').slideUp('hide', function(){
            $('.staticinfo_view[data-id=' + id + ']').slideDown();
        });
    });
    
    
    $(document).delegate('.save_staticinfo', 'click', function() {
        var id = $(this).attr('data-id');
        var ed = tinyMCE.get('currentmce'+id);
        
        var newStaticInfo = ed.getContent();
        
        $.ajax({
            url: '<?php echo $this->url('association', array('action' => 'updateStaticPageInfo'));?>',
            type: 'POST',
            dataType: 'JSON',
            data: {
                'staticPageInfo': newStaticInfo,
                'id': id
            },
            success: function(json) {
                $('.staticinfo_view_div[data-id=' + id + ']').html(newStaticInfo);
                $('.staticinfo_textarea[data-id=' + id + ']').html(newStaticInfo);
            },
            error: function( jqXHR, textStatus, errorThrown ) {
                alert('Save process not succesfull' );
            },
        });
    
        $('.staticinfo_edit[data-id=' + id + ']').slideUp('hide', function(){
            $('.staticinfo_view[data-id=' + id + ']').slideDown();
        });
        
    });
    
    </script>
